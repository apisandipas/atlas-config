(undo-tree-save-format-version . 1)
"a36fa5d43b23c52ac6d50f23c342d41dfafe780b"
[nil nil nil nil (25143 27030 7366 98000) 0 nil]
([nil nil ((nil rear-nonsticky nil 749 . 750) (nil fontified nil 1 . 750) (1 . 750) (t 25143 26921 17013 838000)) nil (25143 27030 7363 669000) 0 nil])
([nil nil ((#("rational" 0 8 (fontified t face font-lock-comment-face)) . 709) (717 . 719) (#("rational" 0 8 (fontified t face font-lock-constant-face)) . 693) (701 . 703) (#("rational" 0 8 (fontified t face font-lock-comment-face)) . 5) (13 . 15)) nil (25143 27030 7360 639000) 0 nil])
([nil nil ((#("straight-" 0 9 (fontified t)) . 225) (234 . 234) (#("straight-" 0 9 (fontified t)) . 200) (209 . 209)) nil (25143 27030 7357 102000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t)) . 212) (undo-tree-id4 . -1)) nil (25143 27030 7354 22000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t)) . 236)) nil (25143 27030 7350 828000) 0 nil])
([nil nil ((221 . 224)) nil (25143 27030 7349 338000) 0 nil])
([nil nil ((224 . 229)) nil (25143 27030 7347 848000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t face font-lock-builtin-face)) . -226) (undo-tree-id1 . -1) (#("o" 0 1 (fontified t face font-lock-builtin-face)) . -227) (undo-tree-id2 . -1) (#("k" 0 1 (fontified t face font-lock-builtin-face)) . -228) (undo-tree-id3 . -1) 229) nil (25143 27030 7345 677000) 0 nil])
([nil nil ((226 . 230)) nil (25143 27030 7338 13000) 0 nil])
([nil nil ((230 . 231)) nil (25143 27030 7336 798000) 0 nil])
([nil nil ((231 . 252)) nil (25143 27030 7335 388000) 0 nil])
([nil nil ((252 . 257)) nil (25143 27030 7334 137000) 0 nil])
([nil nil ((243 . 244)) nil (25143 27030 7332 350000) 0 nil])
([nil nil ((259 . 269)) nil (25143 27030 7330 794000) 0 nil])
([nil nil ((269 . 270)) nil (25143 27030 7328 716000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . -269) (undo-tree-id0 . -1) 270) nil (25143 27030 7325 806000) 0 nil])
([nil nil ((269 . 270)) nil (25143 27030 7304 887000) 0 nil])
([nil nil ((259 . 269)) nil (25143 27030 7303 425000) 0 nil])
([nil nil ((269 . 271)) nil (25143 27030 7301 886000) 0 nil])
([nil nil ((271 . 292)) nil (25143 27030 7300 218000) 0 nil])
([nil nil ((292 . 297)) nil (25143 27030 7297 650000) 0 nil])
([nil nil ((798 . 799) 297) nil (25143 27030 7290 591000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -297) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#(" " 0 1 (fontified t)) . -298) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (#(" " 0 1 (fontified t)) . -299) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (#(" " 0 1 (fontified t)) . -300) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (#(" " 0 1 (fontified t)) . -301) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (#(" " 0 1 (fontified t)) . -302) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (#(" " 0 1 (fontified t)) . -303) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (#(" " 0 1 (fontified t)) . -304) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (#(" " 0 1 (fontified t)) . -305) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) 306 (#(" " 0 1 (fontified t)) . -306) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) 307 (t 25143 27030 8069 622000)) nil (25143 27035 970135 496000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -300) (undo-tree-id814 . -1) (#(" " 0 1 (fontified t)) . -301) (undo-tree-id815 . -1) 302 (300 . 302) (#("  " 0 2 (fontified nil)) . 299) (299 . 301) (299 . 300) (#(" " 0 1 (fontified t)) . -299) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (#(" " 0 1 (fontified t)) . -300) (undo-tree-id818 . -1) (undo-tree-id819 . -1) 301 (347 . 351) (#("    " 0 4 (fontified nil)) . 346) (undo-tree-id820 . -4) (345 . 351) (339 . 345) (#("x" 0 1 (fontified t face font-lock-builtin-face)) . -339) (undo-tree-id821 . -1) (#("c" 0 1 (fontified t face font-lock-builtin-face)) . -340) (undo-tree-id822 . -1) 341 (338 . 341) (334 . 338) (299 . 301) (331 . 332) (t 25143 27035 975798 900000)) nil (25143 27158 390784 764000) 0 nil])
([nil nil ((#("(global-set-key (kbd \"M-/\") 'evilnc-comment-or-uncomment-lines)
" 0 21 (fontified t) 21 26 (fontified t face font-lock-string-face) 26 64 (fontified t)) . 565) (undo-tree-id812 . -23) (undo-tree-id813 . -23) 588) nil (25143 27158 390765 68000) 0 nil])
([nil nil ((nil rear-nonsticky nil 345 . 346) (#("
" 0 1 (fontified nil)) . -409) (345 . 410)) nil (25143 27158 390760 607000) 0 nil])
([nil nil ((381 . 388) (#("0" 0 1 (fontified t)) . -381) (undo-tree-id793 . -1) (#("-" 0 1 (fontified t)) . -382) (undo-tree-id794 . -1) 383 (376 . 383) (355 . 376) (#("c" 0 1 (fontified t)) . -355) (undo-tree-id795 . -1) (#("v" 0 1 (fontified t)) . -356) (undo-tree-id796 . -1) 357 (353 . 357) (346 . 353) (#("p" 0 1 (fontified t face font-lock-string-face)) . -346) (undo-tree-id797 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -347) (undo-tree-id798 . -1) 348 (342 . 348) (338 . 342) (#("m" 0 1 (fontified t face font-lock-builtin-face)) . -338) (undo-tree-id799 . -1) 339 (338 . 339) (#("c" 0 1 (fontified t face font-lock-builtin-face)) . -338) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (#("o" 0 1 (fontified t face font-lock-builtin-face)) . -339) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (#("n" 0 1 (fontified t face font-lock-builtin-face)) . -340) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (#("f" 0 1 (fontified t face font-lock-builtin-face)) . -341) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (#("i" 0 1 (fontified t face font-lock-builtin-face)) . -342) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (#("g" 0 1 (fontified t face font-lock-builtin-face)) . -343) (undo-tree-id810 . -1) (undo-tree-id811 . -1) 344 (346 . 350)) nil (25143 27158 390753 393000) 0 nil])
([nil nil ((#("    (global-set-key (kbd \"M-/\") 'evilnc-comment-or-uncomment-lines)
" 0 4 (fontified t) 4 25 (fontified t) 25 26 (fontified t face font-lock-string-face) 26 29 (fontified t face font-lock-string-face) 29 30 (fontified t face font-lock-string-face) 30 67 (fontified t) 67 68 (fontified t)) . 390) (undo-tree-id756 . -42) (undo-tree-id757 . -42) (undo-tree-id758 . 25) (undo-tree-id759 . -42) (undo-tree-id760 . -42) (undo-tree-id761 . -42) (undo-tree-id762 . -67) (undo-tree-id763 . -42) (undo-tree-id764 . -42) (undo-tree-id765 . -42) (undo-tree-id766 . -42) (undo-tree-id767 . -42) (undo-tree-id768 . -42) (undo-tree-id769 . -42) (undo-tree-id770 . -42) (undo-tree-id771 . -42) (undo-tree-id772 . -42) (undo-tree-id773 . -42) (undo-tree-id774 . -42) (undo-tree-id775 . -42) (undo-tree-id776 . -42) (undo-tree-id777 . -42) (undo-tree-id778 . -42) (undo-tree-id779 . -42) (undo-tree-id780 . -42) (undo-tree-id781 . -42) (undo-tree-id782 . -42) (undo-tree-id783 . -42) (undo-tree-id784 . -42) (undo-tree-id785 . -42) (undo-tree-id786 . -42) (undo-tree-id787 . -42) (undo-tree-id788 . -42) (undo-tree-id789 . -42) (undo-tree-id790 . -42) (undo-tree-id791 . -42) (undo-tree-id792 . -42) 432) nil (25143 27158 390716 580000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -388) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . 1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (#("
" 0 1 (rear-nonsticky t fontified t)) . -389) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (#(" " 0 1 (fontified t)) . -390) (undo-tree-id621 . 1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (#(" " 0 1 (fontified t)) . -391) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (#(" " 0 1 (fontified t)) . -392) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (#(" " 0 1 (fontified t)) . -393) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) 394) nil (25143 27158 390627 271000) 0 nil])
([nil nil ((#(";; Set a global binding for better line commenting/uncommenting
" 0 3 (fontified t face font-lock-comment-delimiter-face) 3 64 (fontified t face font-lock-comment-face)) . 539) (undo-tree-id823 . -38) (undo-tree-id824 . -38) (undo-tree-id825 . -38) (undo-tree-id826 . -38) (undo-tree-id827 . -38) (undo-tree-id828 . -38) (undo-tree-id829 . -38) (undo-tree-id830 . -38) (undo-tree-id831 . -38) (undo-tree-id832 . -38) (undo-tree-id833 . -38) (undo-tree-id834 . -38) (undo-tree-id835 . -38) (undo-tree-id836 . -38) (undo-tree-id837 . -38) (undo-tree-id838 . -38) (undo-tree-id839 . -38) (undo-tree-id840 . -38) (undo-tree-id841 . -38) (undo-tree-id842 . -38) (undo-tree-id843 . -38) (undo-tree-id844 . -38) 577 (t 25143 27158 392153 125000)) nil (25143 27170 626344 637000) 0 nil])
([nil nil ((nil rear-nonsticky nil 332 . 333) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . -396) (332 . 397) 331) nil (25143 27170 626297 501000) 0 nil])
([nil nil ((333 . 335) (t 25143 27170 627585 333000)) nil (25143 27173 331211 551000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -298) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 299 (#("  :config
  (ws-butler-global-mode)" 0 2 (fontified t) 2 9 (face font-lock-builtin-face fontified t) 9 10 (fontified t) 10 34 (fontified t) 34 35 (fontified t)) . 299) (undo-tree-id4 . -35) (undo-tree-id5 . -35) (undo-tree-id6 . -35) (undo-tree-id7 . -35) (334 . 335) (319 . 333) (#("k" 0 1 (fontified t)) . -319) (undo-tree-id8 . -1) (#("e" 0 1 (fontified t)) . -320) (undo-tree-id9 . -1) (#("r" 0 1 (fontified t)) . -321) (undo-tree-id10 . -1) 322 (314 . 322) (#("b" 0 1 (fontified t)) . -314) (undo-tree-id11 . -1) 315 (311 . 315) (308 . 311) (301 . 308) (298 . 301) (298 . 299) (t 25143 27173 331459 853000)) nil (25143 29684 907793 981000) 0 nil])
([nil nil ((411 . 413) (#("  " 0 2 (fontified nil)) . 410) (undo-tree-id0 . -2) (411 . 413) (#("  " 0 2 (fontified nil)) . -402) (411 . 412) (408 . 411) (#("d" 0 1 (fontified t face font-lock-builtin-face)) . -408) (undo-tree-id1 . -1) 409 (405 . 409) (#("b" 0 1 (fontified t face font-lock-builtin-face)) . -405) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (#("i" 0 1 (fontified t face font-lock-builtin-face)) . -406) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("n" 0 1 (fontified t face font-lock-builtin-face)) . -407) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (#("d" 0 1 (fontified t face font-lock-builtin-face)) . -408) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) 409 (t 25143 29684 912059 569000)) nil (25143 29910 295302 253000) 0 nil])
([nil nil ((410 . 412)) nil (25143 29994 692969 345000) 0 nil] [nil nil ((nil rear-nonsticky nil 463 . 464) (nil fontified nil 410 . 464) (410 . 464)) ((#("(general-def :states '(normal motion emacs) \"SPC\" nil)" 0 1 (fontified nil) 1 12 (fontified nil face font-lock-keyword-face) 12 13 (fontified nil) 13 20 (fontified nil face font-lock-builtin-face) 20 44 (fontified nil) 44 49 (fontified nil face font-lock-string-face) 49 53 (fontified nil) 53 54 (fontified nil rear-nonsticky nil)) . 410) (undo-tree-id14 . -53) (undo-tree-id15 . -53) (undo-tree-id16 . -53) (undo-tree-id17 . 1) (undo-tree-id18 . -54) (undo-tree-id19 . 54) (undo-tree-id20 . -1) (nil rear-nonsticky t 463 . 464)) (25143 29910 295162 239000) 0 nil])
([nil nil ((412 . 416)) nil (25143 29994 692967 784000) 0 nil])
nil
([nil nil ((#("o" 0 1 (fontified t)) . -415) (undo-tree-id35 . -1) 416) nil (25143 29994 692965 902000) 0 nil])
([nil nil ((415 . 429)) nil (25143 29994 692962 683000) 0 nil])
([nil nil ((428 . 432) (#(" " 0 1 (fontified nil)) . 427) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (428 . 429)) nil (25143 29994 692960 759000) 0 nil])
([nil nil ((432 . 434)) nil (25143 29994 692954 643000) 0 nil])
([nil nil ((433 . 434)) nil (25143 29994 692953 377000) 0 nil])
([nil nil ((435 . 439)) nil (25143 29994 692952 137000) 0 nil])
([nil nil ((438 . 457)) nil (25143 29994 692950 905000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -455) (undo-tree-id30 . -1) (#("-" 0 1 (fontified t)) . -456) (undo-tree-id31 . -1) 457) nil (25143 29994 692948 574000) 0 nil])
([nil nil ((455 . 476)) nil (25143 29994 692944 114000) 0 nil])
([nil nil ((476 . 482)) nil (25143 29994 692942 834000) 0 nil])
([nil nil ((482 . 500)) nil (25143 29994 692941 464000) 0 nil])
([nil nil ((433 . 434)) nil (25143 29994 692939 994000) 0 nil])
([nil nil ((#("  (\"SPC-j\" . evilnc-comment-or-uncomment-lines)" 0 3 (fontified t) 3 4 (fontified t face font-lock-string-face) 4 9 (fontified t face font-lock-string-face) 9 10 (fontified t face font-lock-string-face) 10 47 (fontified t)) . 504) (undo-tree-id26 . -47) (undo-tree-id27 . 45) (undo-tree-id28 . -47) (undo-tree-id29 . -47)) nil (25143 29994 692936 924000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -503) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) 504) nil (25143 29994 692924 512000) 0 nil])
([nil nil ((504 . 505) (t 25143 29994 698138 580000)) nil (25143 30077 955159 378000) 0 nil])
([nil nil ((444 . 445) (#("x" 0 1 (fontified t)) . 444)) nil (25143 30077 955152 244000) 0 nil])
([nil nil ((apply -3 428 509 undo--wrap-and-run-primitive-undo 428 509 ((432 . 435) 503)) (t 25143 30077 958395 133000)) nil (25143 30086 930493 33000) 0 nil])
([nil nil ((apply 3 428 505 undo--wrap-and-run-primitive-undo 428 505 ((#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -432) 503))) nil (25143 30086 930490 656000) 0 nil])
([nil nil ((apply -3 428 509 undo--wrap-and-run-primitive-undo 428 509 ((432 . 435) 503))) nil (25143 30086 930488 135000) 0 nil])
([nil current ((apply 3 428 505 undo--wrap-and-run-primitive-undo 428 505 ((#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -432) 503))) nil (25143 30086 930481 642000) 0 nil])
nil
