(undo-tree-save-format-version . 1)
"e1d0363658661c5dea7d39b5ff8132b78f34c7b4"
[nil nil nil nil (25143 28548 837756 991000) 0 nil]
([nil nil ((560 . 580) (560 . 562) (539 . 560) (532 . 539) (527 . 532) (t 25143 19130 925213 788000) 526) nil (25143 28571 603754 683000) 0 nil] [nil nil ((541 . 543) (532 . 534) (527 . 532) (t 25143 19130 925213 788000) 526) ((#("
    " 0 1 (fontified t) 1 5 (fontified nil)) . 527) (undo-tree-id0 . -5) (#("\"\"" 0 2 (face font-lock-string-face fontified t)) . 532) (undo-tree-id1 . -2) (#("te" 0 2 (face font-lock-string-face fontified t)) . 541) (undo-tree-id2 . -1)) (25143 28548 837444 706000) 0 nil])
([nil nil ((833 . 834) (832 . 833) (t 25143 28571 610781 833000) 832) nil (25143 28782 645001 166000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 643 . 644) (#("
" 0 1 (fontified nil)) . -682) (639 . 683) 638) nil (25143 28782 644999 316000) 0 nil])
([nil nil ((645 . 646) (#("t" 0 1 (face font-lock-string-face fontified t)) . 645)) nil (25143 28782 644997 16000) 0 nil])
([nil nil ((677 . 678) (673 . 677) (#("t" 0 1 (face font-lock-string-face fontified t)) . -673) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -674) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#("g" 0 1 (face font-lock-string-face fontified t)) . -675) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#("g" 0 1 (face font-lock-string-face fontified t)) . -676) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (#("l" 0 1 (face font-lock-string-face fontified t)) . -677) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -678) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#("s" 0 1 (face font-lock-string-face fontified t)) . -679) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) 680) nil (25143 28782 644989 572000) 0 nil])
([nil nil ((687 . 688) (#("d" 0 1 (face font-lock-string-face fontified t)) . -687) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) 688 (#("e" 0 1 (face font-lock-string-face fontified t)) . 688) (t 25143 28782 653051 647000)) nil (25143 28806 517340 601000) 0 nil])
([nil nil ((882 . 893) (#("c" 0 1 (help-echo "Easy to misread; consider moving the element to the next line" face (font-lock-warning-face font-lock-string-face) fontified t)) . -882) (undo-tree-id88 . -1) (#("o" 0 1 (help-echo "Easy to misread; consider moving the element to the next line" face (font-lock-warning-face font-lock-string-face) fontified t)) . -883) (undo-tree-id89 . -1) (#("f" 0 1 (help-echo "Easy to misread; consider moving the element to the next line" face (font-lock-warning-face font-lock-string-face) fontified t)) . -884) (undo-tree-id90 . -1) (#("i" 0 1 (help-echo "Easy to misread; consider moving the element to the next line" face (font-lock-warning-face font-lock-string-face) fontified t)) . -885) (undo-tree-id91 . -1) (#("g" 0 1 (help-echo "Easy to misread; consider moving the element to the next line" face (font-lock-warning-face font-lock-string-face) fontified t)) . -886) (undo-tree-id92 . -1) 887 (872 . 887) (#("c" 0 1 (help-echo "Easy to misread; consider moving the element to the next line" face (font-lock-warning-face font-lock-builtin-face) fontified t)) . -872) (undo-tree-id93 . -1) (#("h" 0 1 (help-echo "Easy to misread; consider moving the element to the next line" face (font-lock-warning-face font-lock-builtin-face) fontified t)) . -873) (undo-tree-id94 . -1) (#("i" 0 1 (help-echo "Easy to misread; consider moving the element to the next line" face (font-lock-warning-face font-lock-builtin-face) fontified t)) . -874) (undo-tree-id95 . -1) 875 (869 . 875) (t 25143 28806 523951 521000)) nil (25143 28871 976071 365000) 0 nil])
([nil nil ((893 . 894)) nil (25143 28871 976047 339000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -473) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) 474 (#(" " 0 1 (fontified t)) . -474) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (#(" " 0 1 (fontified t)) . -475) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (#(" " 0 1 (fontified t)) . -476) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (#(" " 0 1 (fontified t)) . -477) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (#(" " 0 1 (fontified t)) . -478) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (#(" " 0 1 (fontified t)) . -479) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (#(" " 0 1 (fontified t)) . -480) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (#(" " 0 1 (fontified t)) . -481) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (#(" " 0 1 (fontified t)) . -482) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (#(" " 0 1 (fontified t)) . -483) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (#(" " 0 1 (fontified t)) . -484) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (#(" " 0 1 (fontified t)) . -485) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (#(" " 0 1 (fontified t)) . -486) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (#(" " 0 1 (fontified t)) . -487) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (#(" " 0 1 (fontified t)) . -488) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (#(" " 0 1 (fontified t)) . -489) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (#(" " 0 1 (fontified t)) . -490) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (#(" " 0 1 (fontified t)) . -491) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (#(" " 0 1 (fontified t)) . -492) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (#(" " 0 1 (fontified t)) . -493) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (#(" " 0 1 (fontified t)) . -494) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) 495 (472 . 473) (451 . 471) (445 . 450) (#("O" 0 1 (fontified t face font-lock-string-face)) . -445) (undo-tree-id155 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -446) (undo-tree-id156 . -1) 447 (#("f" 0 1 (fontified t face font-lock-string-face)) . -447) (undo-tree-id157 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -448) (undo-tree-id158 . -1) 449 (439 . 449) (438 . 440) (428 . 439) (406 . 428) (406 . 428) (403 . 406) (#("n" 0 1 (fontified t)) . -403) (undo-tree-id159 . -1) 404 (393 . 404) (372 . 393) (316 . 337) (#("   " 0 3 (fontified nil)) . 316) (353 . 354) (352 . 353) (334 . 352) (#("p" 0 1 (fontified t face font-lock-string-face)) . -334) (undo-tree-id160 . -1) 335 (334 . 335) (#("[" 0 1 (fontified t face font-lock-string-face)) . -334) (undo-tree-id161 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -335) (undo-tree-id162 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -336) (undo-tree-id163 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -337) (undo-tree-id164 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -338) (undo-tree-id165 . -1) 339 (319 . 339) (#(" " 0 1 (fontified t)) . -319) (undo-tree-id166 . -1) (#(" " 0 1 (fontified t)) . -320) (undo-tree-id167 . -1) (#(" " 0 1 (fontified t)) . -321) (undo-tree-id168 . -1) (#(" " 0 1 (fontified t)) . -322) (undo-tree-id169 . -1) (#(" " 0 1 (fontified t)) . -323) (undo-tree-id170 . -1) (#(" " 0 1 (fontified t)) . -324) (undo-tree-id171 . -1) (#(" " 0 1 (fontified t)) . -325) (undo-tree-id172 . -1) (#(" " 0 1 (fontified t)) . -326) (undo-tree-id173 . -1) (#(" " 0 1 (fontified t)) . -327) (undo-tree-id174 . -1) (#(" " 0 1 (fontified t)) . -328) (undo-tree-id175 . -1) (#(" " 0 1 (fontified t)) . -329) (undo-tree-id176 . -1) (#(" " 0 1 (fontified t)) . -330) (undo-tree-id177 . -1) (#(" " 0 1 (fontified t)) . -331) (undo-tree-id178 . -1) 332 (#(" " 0 1 (fontified t)) . -332) (undo-tree-id179 . -1) (#(" " 0 1 (fontified t)) . -333) (undo-tree-id180 . -1) (#(" " 0 1 (fontified t)) . -334) (undo-tree-id181 . -1) (#(" " 0 1 (fontified t)) . -335) (undo-tree-id182 . -1) (#(" " 0 1 (fontified t)) . -336) (undo-tree-id183 . -1) 337 (316 . 337) (#(" " 0 1 (fontified nil)) . 315) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (316 . 317) (316 . 317) (#("{" 0 1 (fontified t)) . -316) (undo-tree-id187 . -1) 317 (309 . 317) (#("g" 0 1 (fontified t)) . -309) (undo-tree-id188 . -1) (#("i" 0 1 (fontified t)) . -310) (undo-tree-id189 . -1) 311 (300 . 311) (#("=" 0 1 (fontified t)) . -300) (undo-tree-id190 . -1) (#("c" 0 1 (fontified t)) . -301) (undo-tree-id191 . -1) (#("o" 0 1 (fontified t)) . -302) (undo-tree-id192 . -1) (#("n" 0 1 (fontified t)) . -303) (undo-tree-id193 . -1) (#("f" 0 1 (fontified t)) . -304) (undo-tree-id194 . -1) 305 (#("i" 0 1 (fontified t)) . -305) (undo-tree-id195 . -1) 306 (292 . 306) (290 . 294) (t 25143 28871 976935 477000)) nil (25143 29047 306776 34000) 0 nil])
([nil nil ((#("                     " 0 21 (fontified nil)) . -425) (405 . 425) (#("                     " 0 21 (fontified nil)) . -391) (371 . 391) (#("                     " 0 21 (fontified nil)) . -336) (undo-tree-id86 . -18) (undo-tree-id87 . -18) (undo-tree-id88 . -18) (316 . 336) 464) nil (25143 29047 306519 240000) 0 nil])
([nil nil ((#("                    " 0 20 (fontified nil)) . -437) (undo-tree-id80 . -20) (undo-tree-id81 . -20) (undo-tree-id82 . -20) (undo-tree-id83 . -20) (413 . 437) (#("                    " 0 20 (fontified nil)) . -399) (375 . 399) (#("                    " 0 20 (fontified nil)) . -340) (undo-tree-id84 . -20) (undo-tree-id85 . -20) (316 . 340) 425) nil (25143 29047 306511 541000) 0 nil])
([nil nil ((#("                        " 0 24 (fontified nil)) . -425) (undo-tree-id74 . -24) (undo-tree-id75 . -24) (undo-tree-id76 . -24) (undo-tree-id77 . -24) (405 . 425) (#("                        " 0 24 (fontified nil)) . -391) (371 . 391) (#("                        " 0 24 (fontified nil)) . -336) (undo-tree-id78 . -24) (undo-tree-id79 . -24) (316 . 336) 437) nil (25143 29047 306500 206000) 0 nil])
([nil nil ((#("                    " 0 20 (fontified nil)) . -413) (undo-tree-id68 . -20) (undo-tree-id69 . -20) (undo-tree-id70 . -20) (undo-tree-id71 . -20) (397 . 413) (#("                    " 0 20 (fontified nil)) . -383) (367 . 383) (#("                    " 0 20 (fontified nil)) . -332) (undo-tree-id72 . -20) (undo-tree-id73 . -20) (316 . 332) 425) nil (25143 29047 306488 667000) 0 nil])
([nil nil ((#("                " 0 16 (fontified nil)) . -401) (undo-tree-id62 . -16) (undo-tree-id63 . -16) (undo-tree-id64 . -16) (undo-tree-id65 . -16) (389 . 401) (#("                " 0 16 (fontified nil)) . -375) (363 . 375) (#("                " 0 16 (fontified nil)) . -328) (undo-tree-id66 . -16) (undo-tree-id67 . -16) (316 . 328) 413) nil (25143 29047 306476 699000) 0 nil])
([nil nil ((#("            " 0 12 (fontified nil)) . -389) (undo-tree-id56 . -12) (undo-tree-id57 . -12) (undo-tree-id58 . -12) (undo-tree-id59 . -12) (381 . 389) (#("            " 0 12 (fontified nil)) . -367) (359 . 367) (#("            " 0 12 (fontified nil)) . -324) (undo-tree-id60 . -12) (undo-tree-id61 . -12) (316 . 324) 401) nil (25143 29047 306461 471000) 0 nil])
([nil nil ((#("        " 0 8 (fontified nil)) . -377) (undo-tree-id50 . -8) (undo-tree-id51 . -8) (undo-tree-id52 . -8) (undo-tree-id53 . -8) (373 . 377) (#("        " 0 8 (fontified nil)) . -359) (355 . 359) (#("        " 0 8 (fontified nil)) . -320) (undo-tree-id54 . -8) (undo-tree-id55 . -8) (316 . 320) 389) nil (25143 29047 306448 684000) 0 nil])
([nil nil ((#("lambda ()
             (interactive)
             ;;(find-file (expand-file-name \"~/.config/emacs/Emacs.org\"))
             (message \"Open config function not yet implemented\"))" 0 24 (fontified t) 24 35 (fontified t face font-lock-keyword-face) 35 50 (fontified t) 50 52 (fontified t face font-lock-comment-delimiter-face) 52 82 (fontified t face font-lock-comment-face) 82 107 (fontified t face font-lock-comment-face) 107 111 (fontified t face font-lock-comment-face) 111 133 (fontified t) 133 134 (fontified t face font-lock-string-face) 134 174 (fontified t face font-lock-string-face) 174 175 (fontified t face font-lock-string-face) 175 177 (fontified t)) . 827) (undo-tree-id0 . -176) (undo-tree-id1 . -176) (undo-tree-id2 . -176) (undo-tree-id3 . -124) (undo-tree-id4 . -176) (undo-tree-id5 . -176) (undo-tree-id6 . -177) (undo-tree-id7 . -177) (undo-tree-id8 . -177) (undo-tree-id9 . -177) (undo-tree-id10 . -177) (undo-tree-id11 . -177) (undo-tree-id12 . -177) (undo-tree-id13 . -177) (undo-tree-id14 . -177) (undo-tree-id15 . -177) (undo-tree-id16 . -177) (undo-tree-id17 . -177) (undo-tree-id18 . -177) (undo-tree-id19 . -177) (undo-tree-id20 . -177) (undo-tree-id21 . -177) (undo-tree-id22 . -176) (undo-tree-id23 . -176) (undo-tree-id24 . -176) (undo-tree-id25 . -176) (undo-tree-id26 . -176) (undo-tree-id27 . 1) (undo-tree-id28 . -177) (undo-tree-id29 . -176) (undo-tree-id30 . -176) (undo-tree-id31 . -176) (undo-tree-id32 . -176) (undo-tree-id33 . -176) (undo-tree-id34 . -111) (undo-tree-id35 . -176) (undo-tree-id36 . -176) (undo-tree-id37 . -176) (undo-tree-id38 . -176) (undo-tree-id39 . -176) (undo-tree-id40 . -176) (undo-tree-id41 . -176) (undo-tree-id42 . -176) (undo-tree-id43 . -176) (undo-tree-id44 . -176) (undo-tree-id45 . -176) (undo-tree-id46 . -176) (undo-tree-id47 . -176) (undo-tree-id48 . -176) (undo-tree-id49 . -176) 1003) nil (25143 29047 306430 434000) 0 nil])
([nil nil ((827 . 846)) nil (25143 29047 306340 757000) 0 nil])
([nil nil ((293 . 302) (t 25143 29047 308859 534000)) nil (25143 29285 909501 871000) 0 nil])
([nil current ((293 . 298) (#("f" 0 1 (fontified t)) . -293) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (#("u" 0 1 (fontified t)) . -294) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (#("n" 0 1 (fontified t)) . -295) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (#("c" 0 1 (fontified t)) . -296) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (#("t" 0 1 (fontified t)) . -297) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (#("i" 0 1 (fontified t)) . -298) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (#("o" 0 1 (fontified t)) . -299) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (#("n" 0 1 (fontified t face font-lock-keyword-face)) . -300) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) 301) nil (25143 29285 909497 132000) 0 nil])
nil
